# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.sentence import Sentence  # noqa: F401,E501
from swagger_server import util


class FiveDivisionsResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, high_to_low: List[int]=None, score_division: List[float]=None, name_division: List[str]=None, _pass: bool=None, source: Sentence=None):  # noqa: E501
        """FiveDivisionsResult - a model defined in Swagger

        :param high_to_low: The high_to_low of this FiveDivisionsResult.  # noqa: E501
        :type high_to_low: List[int]
        :param score_division: The score_division of this FiveDivisionsResult.  # noqa: E501
        :type score_division: List[float]
        :param name_division: The name_division of this FiveDivisionsResult.  # noqa: E501
        :type name_division: List[str]
        :param _pass: The _pass of this FiveDivisionsResult.  # noqa: E501
        :type _pass: bool
        :param source: The source of this FiveDivisionsResult.  # noqa: E501
        :type source: Sentence
        """
        self.swagger_types = {
            'high_to_low': List[int],
            'score_division': List[float],
            'name_division': List[str],
            '_pass': bool,
            'source': Sentence
        }

        self.attribute_map = {
            'high_to_low': 'highToLow',
            'score_division': 'scoreDivision',
            'name_division': 'nameDivision',
            '_pass': 'pass',
            'source': 'source'
        }

        self._high_to_low = high_to_low
        self._score_division = score_division
        self._name_division = name_division
        self.__pass = _pass
        self._source = source

    @classmethod
    def from_dict(cls, dikt) -> 'FiveDivisionsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The fiveDivisionsResult of this FiveDivisionsResult.  # noqa: E501
        :rtype: FiveDivisionsResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def high_to_low(self) -> List[int]:
        """Gets the high_to_low of this FiveDivisionsResult.


        :return: The high_to_low of this FiveDivisionsResult.
        :rtype: List[int]
        """
        return self._high_to_low

    @high_to_low.setter
    def high_to_low(self, high_to_low: List[int]):
        """Sets the high_to_low of this FiveDivisionsResult.


        :param high_to_low: The high_to_low of this FiveDivisionsResult.
        :type high_to_low: List[int]
        """

        self._high_to_low = high_to_low

    @property
    def score_division(self) -> List[float]:
        """Gets the score_division of this FiveDivisionsResult.


        :return: The score_division of this FiveDivisionsResult.
        :rtype: List[float]
        """
        return self._score_division

    @score_division.setter
    def score_division(self, score_division: List[float]):
        """Sets the score_division of this FiveDivisionsResult.


        :param score_division: The score_division of this FiveDivisionsResult.
        :type score_division: List[float]
        """

        self._score_division = score_division

    @property
    def name_division(self) -> List[str]:
        """Gets the name_division of this FiveDivisionsResult.


        :return: The name_division of this FiveDivisionsResult.
        :rtype: List[str]
        """
        return self._name_division

    @name_division.setter
    def name_division(self, name_division: List[str]):
        """Sets the name_division of this FiveDivisionsResult.


        :param name_division: The name_division of this FiveDivisionsResult.
        :type name_division: List[str]
        """

        self._name_division = name_division

    @property
    def _pass(self) -> bool:
        """Gets the _pass of this FiveDivisionsResult.


        :return: The _pass of this FiveDivisionsResult.
        :rtype: bool
        """
        return self.__pass

    @_pass.setter
    def _pass(self, _pass: bool):
        """Sets the _pass of this FiveDivisionsResult.


        :param _pass: The _pass of this FiveDivisionsResult.
        :type _pass: bool
        """

        self.__pass = _pass

    @property
    def source(self) -> Sentence:
        """Gets the source of this FiveDivisionsResult.


        :return: The source of this FiveDivisionsResult.
        :rtype: Sentence
        """
        return self._source

    @source.setter
    def source(self, source: Sentence):
        """Sets the source of this FiveDivisionsResult.


        :param source: The source of this FiveDivisionsResult.
        :type source: Sentence
        """

        self._source = source
